{"md5":"492cc4ea76830e3a1b400078cfe563e7","content":"<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\"><span class=\"section-number-2\">1</span> 原题</h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<blockquote>\n<p>\nGiven a sorted integer array without duplicates, return the summary of its ranges.\n</p>\n\n<p>\nFor example, given [0,1,2,4,5,7], return [\"0->2\",\"4->5\",\"7\"].\n</p>\n</blockquote>\n\n<p>\n就是将数组中 0,1,2 这样的 +1 递增部分换成 <code>0->2</code> 这样的表示。\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\"><span class=\"section-number-2\">2</span> 分析</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n<p>\n这道题的等级是 easy，也确实十分简单，只要在遍历数组的时候检查是否递增，过程中记住递增的首尾，最后记成 <code>m->n</code> 这样的形式即可。\n</p>\n\n<p>\n简单的边界条件直接处理。\n</p>\n\n<!--more-->\n</div>\n</div>\n\n<div id=\"outline-container-sec-3\" class=\"outline-2\">\n<h2 id=\"sec-3\"><span class=\"section-number-2\">3</span> 代码</h2>\n<div class=\"outline-text-2\" id=\"text-3\">\n<div class=\"org-src-container\">\n\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\"> * @param {number[]} nums</span><br><span class=\"line\"> * @return {string[]}</span><br><span class=\"line\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> summaryRanges = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) </span>{</span><br><span class=\"line\">    <span class=\"keyword\">var</span> result = [];</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (nums.length === <span class=\"number\">0</span>) <span class=\"keyword\">return</span> [];</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (nums.length == <span class=\"number\">1</span>) <span class=\"keyword\">return</span> [nums[<span class=\"number\">0</span>].toString()];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i < nums.length; i++) {</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> rangeBegin = nums[i];</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> rangeEnd = nums[i];</span><br><span class=\"line\">\t<span class=\"keyword\">do</span> {</span><br><span class=\"line\">\t    i++;</span><br><span class=\"line\">\t    <span class=\"keyword\">if</span> (nums[i] == rangeEnd + <span class=\"number\">1</span>) {</span><br><span class=\"line\">\t\trangeEnd = nums[i];</span><br><span class=\"line\">\t    } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">\t\ti--;</span><br><span class=\"line\">\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t    }</span><br><span class=\"line\">\t} <span class=\"keyword\">while</span> (i < nums.length);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (rangeEnd != rangeBegin) {</span><br><span class=\"line\">\t    result.push(rangeBegin + <span class=\"string\">\"->\"</span> + rangeEnd);</span><br><span class=\"line\">\t} <span class=\"keyword\">else</span> {</span><br><span class=\"line\">\t    result.push(rangeBegin.toString());</span><br><span class=\"line\">\t}</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">};</span><br></pre></td></tr></table></figure>\n</div>\n</div>\n</div>\n"}
