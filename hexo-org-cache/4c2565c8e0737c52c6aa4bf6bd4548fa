{"md5":"947c55a0c9bb03c7d6232f258b3e7f51","content":"\n\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\"><span class=\"section-number-2\">1</span> 引子</h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<p>\n因为前一段时间尝试给 hexo 写一个 orgmode 的 renderer，所以到处找各种将 orgmode 转化为 html 的方式。orgmode 不如 markdown 流行且功能复杂（在 orgmode 开发组的工作下还在演进）。此前我曾尝试 <a href=\"https://github.com/mooz/org-js\">mooz/org-js</a> ，作者做的确实很漂亮，但是似乎开发陷入停滞，而且还有太多的特性需要支持，于是便想到调用 emacs 本身进行渲染。\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\"><span class=\"section-number-2\">2</span> Run Emacs Lisp in Commmand-line</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n</div><div id=\"outline-container-sec-2-1\" class=\"outline-3\">\n<h3 id=\"sec-2-1\"><span class=\"section-number-3\">2.1</span> Hello World</h3>\n<div class=\"outline-text-3\" id=\"text-2-1\">\n<div class=\"org-src-container\">\n\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">emacs --batch --execute <span class=\"string\">'(message \"hello,world!\")'</span> --kill</span><br></pre></td></tr></table></figure>\n</div>\n\n<!--more-->\n\n<p>\n要注意 <code>emacs --batch</code> 将 <code>message</code> 的输出全部输出到了 <code>stderr</code> ，我也不知道原因。\n</p>\n\n<p>\n<code>--batch--</code> 在 <code>emacs -help</code> 里有描述\n</p>\n\n<blockquote>\n<p>\n–batch:                    do not do interactive display; implies -q\n</p>\n</blockquote>\n\n<p>\n可以理解为只加载了 <code>emacs lisp</code> 的解释器，而不加载图形界面（为后面一个坑埋下伏笔）。这样的情况下 emacs 加载的速度还是相当让人满意的，上面的命令在我这里执行之花了 0.090s。\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2-2\" class=\"outline-3\">\n<h3 id=\"sec-2-2\"><span class=\"section-number-3\">2.2</span> org2html</h3>\n<div class=\"outline-text-3\" id=\"text-2-2\">\n<p>\n可以尝试新建一个简单的 <code>test.org</code> 然后执行\n</p>\n<div class=\"org-src-container\">\n\n<figure class=\"highlight\"><table><tr><td class=\"code\"><pre><span class=\"line\">emacs --batch --execute '(progn (find-file \"test.org\")(org-html-export-as-html)(message \"%s\" (buffer-string)))' --kill</span><br></pre></td></tr></table></figure>\n</div>\n\n<p>\n就可以看到结果从终端上输出了~\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2-3\" class=\"outline-3\">\n<h3 id=\"sec-2-3\"><span class=\"section-number-3\">2.3</span> Trouble Shooting</h3>\n<div class=\"outline-text-3\" id=\"text-2-3\">\n</div><div id=\"outline-container-sec-2-3-1\" class=\"outline-4\">\n<h4 id=\"sec-2-3-1\"><span class=\"section-number-4\">2.3.1</span> htmlize 不能正常工作</h4>\n<div class=\"outline-text-4\" id=\"text-2-3-1\">\n<p>\n上面提到 batch 是不加载 UI 的，所以依赖 UI 配色的 <code>htmlize</code> 不能正常使用。不过通过手动增加 <code>load-path</code> 并且使用指定的 <code>font-lock</code> 也可以工作。\n</p>\n\n<div class=\"org-src-container\">\n\n<figure class=\"highlight lisp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">;; Make sure the the htmlize library is in load-path.</span></span><br><span class=\"line\"><span class=\"list\">(<span class=\"keyword\">custom-set-faces</span></span><br><span class=\"line\"> <span class=\"quoted\">'(default                      ((<span class=\"literal\">t</span> (:foreground <span class=\"string\">\"#ffffff\"</span> :background <span class=\"string\">\"black\"</span>))))</span></span><br><span class=\"line\"> <span class=\"quoted\">'(font-lock-builtin-face       ((<span class=\"literal\">t</span> (:foreground <span class=\"string\">\"#ff0000\"</span>))))</span></span><br><span class=\"line\"> <span class=\"quoted\">'(font-lock-comment-face       ((<span class=\"literal\">t</span> (:bold <span class=\"literal\">t</span> :foreground <span class=\"string\">\"#333300\"</span>))))</span></span><br><span class=\"line\"> <span class=\"quoted\">'(font-lock-constant-face      ((<span class=\"literal\">t</span> (:foreground <span class=\"string\">\"magenta\"</span>))))</span></span><br><span class=\"line\"> <span class=\"quoted\">'(font-lock-function-name-face ((<span class=\"literal\">t</span> (:bold <span class=\"literal\">t</span> :foreground <span class=\"string\">\"Blue\"</span>))))</span></span><br><span class=\"line\"> <span class=\"quoted\">'(font-lock-keyword-face       ((<span class=\"literal\">t</span> (:foreground <span class=\"string\">\"yellow3\"</span>))))</span></span><br><span class=\"line\"> <span class=\"quoted\">'(font-lock-string-face        ((<span class=\"literal\">t</span> (:foreground <span class=\"string\">\"light blue\"</span>))))</span></span><br><span class=\"line\"> <span class=\"quoted\">'(font-lock-type-face    ((<span class=\"literal\">t</span> (:foreground <span class=\"string\">\"green\"</span>))))</span></span><br><span class=\"line\"> <span class=\"quoted\">'(font-lock-variable-name-face ((<span class=\"literal\">t</span> (:foreground <span class=\"string\">\"cyan\"</span> :bold <span class=\"literal\">t</span>))))</span></span><br><span class=\"line\"> <span class=\"quoted\">'(font-lock-warning-face       ((<span class=\"literal\">t</span> (:foreground <span class=\"string\">\"red\"</span> :weight bold))))</span>)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"list\">(<span class=\"keyword\">setq</span> htmlize-use-rgb-map <span class=\"quoted\">'force</span>)</span></span><br><span class=\"line\"><span class=\"list\">(<span class=\"keyword\">require</span> <span class=\"quoted\">'htmlize</span>)</span></span><br></pre></td></tr></table></figure>\n</div>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2-3-2\" class=\"outline-4\">\n<h4 id=\"sec-2-3-2\"><span class=\"section-number-4\">2.3.2</span> org-html-fontify-code: Wrong number of arguments</h4>\n<div class=\"outline-text-4\" id=\"text-2-3-2\">\n<div class=\"org-src-container\">\n\n<figure class=\"highlight lisp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"list\">(<span class=\"keyword\">defun</span> org-font-lock-ensure <span class=\"list\">()</span></span><br><span class=\"line\">  <span class=\"list\">(<span class=\"keyword\">font-lock-fontify-buffer</span>)</span>)</span></span><br></pre></td></tr></table></figure>\n</div>\n\n<p>\n这是来自 <a href=\"http://wenshanren.org/?p=768\">Emacs: org-html-export 时出现 org-html-fontify-code: Wrong number of arguments… | 肉山博客 (Wenshan's Blog)</a> 的解决方案。\n</p>\n</div>\n</div>\n</div>\n</div>\n\n<div id=\"outline-container-sec-3\" class=\"outline-2\">\n<h2 id=\"sec-3\"><span class=\"section-number-2\">3</span> 延伸阅读</h2>\n<div class=\"outline-text-2\" id=\"text-3\">\n<ul class=\"org-ul\">\n<li><a href=\"http://wenshanren.org/?p=768\">Emacs: org-html-export 时出现 org-html-fontify-code: Wrong number of arguments… | 肉山博客 (Wenshan's Blog)</a>\n</li>\n<li><a href=\"http://comments.gmane.org/gmane.emacs.orgmode/60331\">htmlize doesn't work in –batch mode</a>\n</li>\n<li><a href=\"http://stackoverflow.com/questions/3591337/emacs-htmlize-in-batch-mode\">Emacs htmlize in batch mode? - Stack Overflow</a>\n</li>\n</ul>\n</div>\n</div>\n"}
