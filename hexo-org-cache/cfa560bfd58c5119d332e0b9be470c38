{"md5":"204ac130893e37d0161d8dd4268c81b7","content":"\n\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\"><span class=\"section-number-2\">1</span> 原题</h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<p>\nFind the total area covered by two rectilinear rectangles in a 2D plane.\n</p>\n\n<p>\nEach rectangle is defined by its bottom left corner and top right corner as shown in the figure.\n</p>\n\n<p>\n<a href=\"https://leetcode.com/static/images/problemset/rectangle_area.png\">example</a>\n</p>\n\n<p>\nRectangle Area\nAssume that the total area is never beyond the maximum possible value of int.\n</p>\n</div>\n\n<div id=\"outline-container-sec-1-1\" class=\"outline-3\">\n<h3 id=\"sec-1-1\"><span class=\"section-number-3\">1.1</span> 翻译</h3>\n<div class=\"outline-text-3\" id=\"text-1-1\">\n<p>\n计算被两个长方形覆盖的面积，假设结果不会溢出。\n</p>\n</div>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\"><span class=\"section-number-2\">2</span> 分析</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n<p>\n这道题的顶级是 <code>Easy</code> ，但是相对之前有题 <code>Medium</code> 的难度：<a href=\"http://codefalling.com/2015/11/01/Leetcode-Javascript-Find-Peak-Element/\">{Leetcode-Javascript}Find Peak Element | M-x codefalling</a> ,这道题至少还是要思考一下的，不然容易漏掉一些情况。\n</p>\n\n<p>\n直接看题图，这道题让求总覆盖面积，其实就是两个矩形的面积之和减掉重复部位的面积。重复部位的面积容易求，用 <code>两个矩形的高度之和 - 两个矩形合并后的高度（y 值最大值 - y 值最小值）</code> 就可以得到其高，同理也容易得到宽。\n</p>\n\n<p>\n但是容易忽略的是，可能两个矩形是完全不重合的，这样就会出现上面的计算方法得到的结果为负值（两个矩形高加起来中间还有空白），只要排除掉这种情况，将高（宽）置为零即可。\n</p>\n\n<!--more-->\n</div>\n</div>\n\n<div id=\"outline-container-sec-3\" class=\"outline-2\">\n<h2 id=\"sec-3\"><span class=\"section-number-2\">3</span> 代码</h2>\n<div class=\"outline-text-2\" id=\"text-3\">\n<div class=\"org-src-container\">\n\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\"> * @param {number} A</span><br><span class=\"line\"> * @param {number} B</span><br><span class=\"line\"> * @param {number} C</span><br><span class=\"line\"> * @param {number} D</span><br><span class=\"line\"> * @param {number} E</span><br><span class=\"line\"> * @param {number} F</span><br><span class=\"line\"> * @param {number} G</span><br><span class=\"line\"> * @param {number} H</span><br><span class=\"line\"> * @return {number}</span><br><span class=\"line\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> computeArea = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">A, B, C, D, E, F, G, H</span>) </span>{</span><br><span class=\"line\">  <span class=\"keyword\">var</span> r1_h = D - B;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> r1_w = C - A;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> r2_h = H - F;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> r2_w = G - E;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> merge_h = <span class=\"built_in\">Math</span>.max(B, D, F, H) - <span class=\"built_in\">Math</span>.min(B, D, F, H); <span class=\"comment\">// 重合部分的高度</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> merge_w = <span class=\"built_in\">Math</span>.max(A, C, E, G) - <span class=\"built_in\">Math</span>.min(A, C, E, G);</span><br><span class=\"line\">  <span class=\"keyword\">var</span> duplicate_h = (r1_h + r2_h) - merge_h;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> duplicate_w = (r1_w + r2_w) - merge_w;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(duplicate_h < <span class=\"number\">0</span> || duplicate_w < <span class=\"number\">0</span>){ <span class=\"comment\">// 完全不重合</span></span><br><span class=\"line\">    duplicate_h = <span class=\"number\">0</span>;</span><br><span class=\"line\">    duplicate_w = <span class=\"number\">0</span>;</span><br><span class=\"line\">  }</span><br><span class=\"line\">  <span class=\"keyword\">return</span> r1_h * r1_w + r2_h * r2_w - duplicate_h * duplicate_w;</span><br><span class=\"line\">};</span><br></pre></td></tr></table></figure>\n</div>\n</div>\n</div>\n"}
