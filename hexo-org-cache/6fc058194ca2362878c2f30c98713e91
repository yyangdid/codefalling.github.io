{"md5":"37151cda839bbb7cdc978c7fc674d0f5","content":"\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\"><span class=\"section-number-2\">1</span> &#x9898;&#x76EE;</h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<pre class=\"example\">\nGiven a m x n grid filled with non-negative numbers, find a path from top left to bottom right which minimizes the sum of all numbers along its path.\n\nNote: You can only move either down or right at any point in time.\n</pre>\n</div>\n\n<div id=\"outline-container-sec-1-1\" class=\"outline-3\">\n<h3 id=\"sec-1-1\"><span class=\"section-number-3\">1.1</span> &#x5927;&#x610F;</h3>\n<div class=\"outline-text-3\" id=\"text-1-1\">\n<p>\n&#x5728;&#x4E00;&#x4E2A;&#x975E;&#x8D1F;&#x6570;&#x7684;&#x77E9;&#x9635;&#x4E2D;&#xFF0C;&#x627E;&#x51FA;&#x7531;&#x5DE6;&#x4E0A;&#x89D2;&#x79FB;&#x52A8;&#x5230;&#x53F3;&#x4E0B;&#x89D2;&#x7684;&#x548C;&#x6700;&#x5C0F;&#x7684;&#x8DEF;&#x5F84;&#xFF0C;&#x5E76;&#x8FD4;&#x56DE;&#x548C;&#x3002;&#xFF08;&#x53EA;&#x80FD;&#x5411;&#x53F3;&#x6216;&#x5411;&#x4E0B;&#x79FB;&#x52A8;&#xFF09;&#x3002;\n</p>\n</div>\n</div>\n</div>\n\n\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\"><span class=\"section-number-2\">2</span> &#x5206;&#x6790;</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n<pre class=\"example\">\n1 2 3 2\n4 5 6 4\n3 1 3 5\n</pre>\n\n<p>\n&#x53C2;&#x7167;&#x8FD9;&#x4E2A;&#x77E9;&#x9635;&#xFF0C;&#x6211;&#x4EEC;&#x7528; \\(d_{i,j}\\) &#x8868;&#x793A; <code>mxn</code> &#x77E9;&#x9635;&#x4E2D;&#x4ECE;&#x5DE6;&#x4E0A;&#x89D2;&#x5230;&#x7B2C; i &#x884C;&#x7B2C; j &#x5217;&#x7684;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#x957F;&#x5EA6;&#xFF0C; \\(n_{i,j}\\) &#x8868;&#x793A;&#x5176;&#x6570;&#x503C;&#x3002;&#x5219;\n</p>\n\n<ul class=\"org-ul\">\n<li>\\(d_{1,1} = n_{1,1} = 1\\)\n</li>\n<li>\\(d_{i,j} = min( d_{i-1,j}, d_{i,j-1} + n_{i,j} )\\) &#x4ECE;&#x4E0A;&#x6765;&#x6216;&#x4ECE;&#x5DE6;&#x6765;&#xFF0C;&#x5176;&#x4E2D; \\(i,j \\not= 1\\)\n</li>\n<li>\\(d_{1,j} = d_{1,j-1} + n_{1,j}\\) &#xFF0C;&#x7B2C;&#x4E00;&#x6392;\n</li>\n<li>\\(d_{i,1} = d_{i-1,1} + n_{i,1}\\) &#xFF0C;&#x7B2C;&#x4E00;&#x5217;\n</li>\n</ul>\n\n<p>\n&#x5217;&#x51FA;&#x72B6;&#x6001;&#x8F6C;&#x79FB;&#x5F0F;&#x540E;&#x601D;&#x8DEF;&#x5C31;&#x65E0;&#x6BD4;&#x6E05;&#x6670;&#x4E86;&#xFF0C;&#x4ECE; \\(d_{1,1}\\) &#x8BA1;&#x7B97;&#x5230; \\(d_{m,n}\\) &#x5373;&#x53EF;&#x3002;\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-3\" class=\"outline-2\">\n<h2 id=\"sec-3\"><span class=\"section-number-2\">3</span> &#x4EE3;&#x7801;</h2>\n<div class=\"outline-text-2\" id=\"text-3\">\n<div class=\"org-src-container\">\n\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\"> * @param {number[][]} grid</span><br><span class=\"line\"> * @return {number}</span><br><span class=\"line\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> minPathSum = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">grid</span>) </span>{</span><br><span class=\"line\">  <span class=\"keyword\">var</span> d = [];</span><br><span class=\"line\">  m = grid.length;</span><br><span class=\"line\">  n = grid[<span class=\"number\">0</span>].length;</span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> k = <span class=\"number\">0</span>; k &lt; m; k++){</span><br><span class=\"line\">    d[k] = [];</span><br><span class=\"line\">  }</span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; m; i++){</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> j = <span class=\"number\">0</span>; j &lt; n; j++){</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(i === <span class=\"number\">0</span> &amp;&amp; j === <span class=\"number\">0</span>){</span><br><span class=\"line\">\td[i][j] = grid[i][j];</span><br><span class=\"line\">      }<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(i === <span class=\"number\">0</span>){</span><br><span class=\"line\">\td[i][j] = d[i][j-<span class=\"number\">1</span>] + grid[i][j];</span><br><span class=\"line\">      }<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(j === <span class=\"number\">0</span>){</span><br><span class=\"line\">\td[i][j] = d[i-<span class=\"number\">1</span>][j] + grid[i][j];</span><br><span class=\"line\">      }<span class=\"keyword\">else</span>{</span><br><span class=\"line\">\td[i][j] = <span class=\"built_in\">Math</span>.min(d[i][j-<span class=\"number\">1</span>] , d[i-<span class=\"number\">1</span>][j]) + grid[i][j];</span><br><span class=\"line\">      }</span><br><span class=\"line\">    }</span><br><span class=\"line\">  }</span><br><span class=\"line\">  <span class=\"keyword\">return</span> d[m-<span class=\"number\">1</span>][n-<span class=\"number\">1</span>];</span><br><span class=\"line\">};</span><br></pre></td></tr></table></figure>\n</div>\n</div>\n</div>\n"}
