{"md5":"e7d5d33a83f70f4a7aa27d2821611b66","content":"\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\"><span class=\"section-number-2\">1</span> 起因</h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<p>\n在 hexo 中使用本地图片是件非常让人纠结的事情，在 markdown 里的图片地址似乎永远无法和最后生成的网页保持一致。\n</p>\n\n<p>\n这些问题使得我一度不愿意使用本地图片而选择用图床，但被移动运营商无耻的横条广告逼得打算上 https，图床只支持 http 就成了问题。\n</p>\n\n<!--more-->\n\n<p>\nhexo 下插入图片现在大概有几个方案\n</p>\n</div>\n\n<div id=\"outline-container-sec-1-1\" class=\"outline-3\">\n<h3 id=\"sec-1-1\"><span class=\"section-number-3\">1.1</span> 放在根目录</h3>\n<div class=\"outline-text-3\" id=\"text-1-1\">\n<p>\n早期大部分的方案是把图片放在 <code>source/img</code> 下，然后在 markdown 里写 <code>![img](/source/img/img.png)</code> 。显然这样在本地的编辑器里完全不能正确识别图片的位置。\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-1-2\" class=\"outline-3\">\n<h3 id=\"sec-1-2\"><span class=\"section-number-3\">1.2</span> asset-image</h3>\n<div class=\"outline-text-3\" id=\"text-1-2\">\n<p>\n在 hexo 2.x 时出现的插件，后来被吸纳进 <code>hexo 3 core</code> ，用法的介绍见 <a href=\"https://hexo.io/zh-cn/docs/asset-folders.html\">资源文件夹 | Hexo</a> 。比较尴尬的是，这种方法直接放弃了 markdown 原来的语法，使用类似 <code>{% asset_img example.jpg This is an example image %}</code> 的语法，。markdown 本来有插入图片的语法不好好支持，专门用一个新的语法来插入本地图片，让我这种强迫症不太能接受。\n</p>\n</div>\n</div>\n</div>\n\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\"><span class=\"section-number-2\">2</span> 解决方案</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n<p>\n<a href=\"https://github.com/CodeFalling/hexo-asset-image\">CodeFalling/hexo-asset-image</a>\n</p>\n</div>\n\n<div id=\"outline-container-sec-2-1\" class=\"outline-3\">\n<h3 id=\"sec-2-1\"><span class=\"section-number-3\">2.1</span> 使用</h3>\n<div class=\"outline-text-3\" id=\"text-2-1\">\n<p>\n首先确认 <code>_config.yml</code> 中有 <code>post_asset_folder:true</code> 。\n</p>\n\n<p>\n在 hexo 目录，执行\n</p>\n\n<div class=\"org-src-container\">\n\n<figure class=\"highlight\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install https://github.com/CodeFalling/hexo-asset-image --save</span><br></pre></td></tr></table></figure>\n</div>\n\n<p>\n假设在\n</p>\n\n<pre class=\"example\">\nMacGesture2-Publish\n├── apppicker.jpg\n├── logo.jpg\n└── rules.jpg\nMacGesture2-Publish.md\n</pre>\n\n<p>\n这样的目录结构（目录名和文章名一致），只要使用 <code>![logo](MacGesture2-Publish/logo.jpg)</code> 就可以插入图片。\n生成的结构为\n</p>\n\n<pre class=\"example\">\npublic/2015/10/18/MacGesture2-Publish\n├── apppicker.jpg\n├── index.html\n├── logo.jpg\n└── rules.jpg\n</pre>\n\n<p>\n同时，生成的 html 是\n</p>\n<div class=\"org-src-container\">\n\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\"><<span class=\"title\">img</span> <span class=\"attribute\">src</span>=<span class=\"value\">\"/2015/10/18/MacGesture2-Publish/logo.jpg\"</span> <span class=\"attribute\">alt</span>=<span class=\"value\">\"logo\"</span>></span></span><br></pre></td></tr></table></figure>\n</div>\n\n<p>\n而不是愚蠢的\n</p>\n<div class=\"org-src-container\">\n\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\"><<span class=\"title\">img</span> <span class=\"attribute\">src</span>=<span class=\"value\">\"MacGesture2-Publish/logo.jpg\"</span> <span class=\"attribute\">alt</span>=<span class=\"value\">\"logo\"</span>></span></span><br></pre></td></tr></table></figure>\n</div>\n\n<p>\n值得一提的是，这个插件对于 <a href=\"https://github.com/CodeFalling/hexo-renderer-org\">CodeFalling/hexo-renderer-org</a> 同样有效。\n</p>\n</div>\n</div>\n</div>\n"}
