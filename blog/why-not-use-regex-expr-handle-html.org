#+TITLE: 为什么正则表达式不适合处理 HTML
#+DATE: 2016-02-09
#+TAGS: regex, html

* 背景
大一的时候曾经用 ~python~ 写过一个微信公众号的后台，其中有个功能是收到学生发来的学号后从学校的页面查询结果，然后提取需要的数据并且返回。当时从网上看了很多所谓的“爬虫教程”都用正则表达式来处理爬到的 HTML，也就照葫芦画瓢。但代码的可读性可维护性极差，运行效率也不高，甚至自己改成了 ~substring(find('xxx'))~ 这样的方法感觉更为方便。


后来接触了 ~lxml~ 才知道还有 ~xpath~ 这样的东西，而时常还有人会问为什么自己写了一段正则处理不好 HTML 之类的问题，所以干脆写一篇文章整理一下。

* Why not

正则表达式顾名思义，是用来描述 *正则语言* 的表达式（当然不排除某些正则引擎支持一些非标准的做法来描述非正则语言），而 HTML 是 *上下文无关语言* 。学过形式语言和自动机的同学应该了解， *正则语言一定是上下文无关语言，而上下文无关语言却未必是正则语言* 。 *正则语言可以被 NFA/DFA 识别 ，而上下文无关语言只能被下推自动机识别* 。

** 实例
举个在解析 HTML 中常见到的例子，

#+BEGIN_SRC html
  <div class="T1">
    <div class="T2">
      <div class="T3">
        ...
      </div>
      <div class="T3">
        T1.T2.T3
      </div>
    </div>
  </div>
#+END_SRC

如何匹配 ~<div class="T2">~ 的元素内容呢（即从这个 ~div~ 到和其匹配的 ~</div>~ 的内容）？

答案是： *没有办法* 。

很明显这里我们需要一个堆栈来记录 ~<div></div>~ 的匹配，即 *下推自动机* 才能完成的匹配，正则此时无能为力。

* 应该使用什么
正则表达式既然无能为力，那我们应该使用什么呢？

** Jquery-like selector

~Jquery~ 的 API 设计褒贬不一，但不得不承认它的 ~selector~ 深入人心且非常适合提取 HTML 的元素，而且主流语言几乎都有对应的实现。

** xpath
被设计来专门用于描述 ~XML~ 路径的语言，也被开发者广泛用于 ~XML/HTML~ 的查询语言，实现也很多，和 ~selector~ 相比可能需要更高一点的学习成本。
